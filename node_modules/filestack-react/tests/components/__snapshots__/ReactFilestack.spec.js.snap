// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReactFilestack /> should not allow wrong option properties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="pick"
    onError={[Function]}
    onSuccess={[Function]}
    options={
      Object {
        "wrong": "handle",
      }
    }
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should render ReactFilestack component 1`] = `
<button
  className=""
  name="filestack"
  onClick={[Function]}
>
  Pick file
</button>
`;

exports[`<ReactFilestack /> should render the component 1`] = `
<test
  onPick={[Function]}
/>
`;

exports[`<ReactFilestack /> should run metadata and mock handle 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="metadata"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run pick as default 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="pick"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run remove width mock handle and security 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="remove"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={
      Object {
        "policy": "policy",
        "signature": "signature",
      }
    }
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run retrieve with mock handle 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="retrieve"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run storeUrl with mock url 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="storeUrl"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run transform with mock url 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="transform"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should run upload with mock data 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={
      Blob {
        Symbol(impl): BlobImpl {
          "_buffer": Object {
            "data": Array [
              123,
              10,
              32,
              32,
              34,
              104,
              101,
              108,
              108,
              111,
              34,
              58,
              32,
              34,
              119,
              111,
              114,
              108,
              100,
              34,
              10,
              125,
            ],
            "type": "Buffer",
          },
          "type": "application/json",
          Symbol(wrapper): [Circular],
        },
      }
    }
    link={false}
    mode="upload"
    onError={[Function]}
    onSuccess={[Function]}
    options={Object {}}
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ReactFilestack /> should throw an exception with transform and wrong options properties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReactFilestack
    apikey="Acu94EFL1STGYvkM6a8usz"
    buttonClass=""
    buttonText="Pick file"
    cname={null}
    file={null}
    link={false}
    mode="transform"
    onError={[Function]}
    onSuccess={[Function]}
    options={
      Object {
        "wrong": "wrong",
      }
    }
    render={null}
    security={null}
    sessionCache={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Pick file",
      "className": "",
      "name": "filestack",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": "Pick file",
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Pick file",
        "className": "",
        "name": "filestack",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": "Pick file",
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
